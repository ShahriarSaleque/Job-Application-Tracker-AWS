AWSTemplateFormatVersion: 2010-09-09
Description: jat-app

Transform:
  - AWS::Serverless-2016-10-31

Resources:

  JobApplicationTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: JobApplications
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod

  CreateApplicationFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/createApplication.createApplicationHandler
      Runtime: nodejs18.x
      Environment:
        Variables:
          TABLE_NAME: JobApplications
          QUEUE_URL: !Ref ResumeProcessingQueue
      Events:
        CreateApplicationApi:
          Type: Api
          Properties:
            Path: /applications
            Method: POST
            RestApiId: !Ref MyApi

            
      Policies:
        - DynamoDBCrudPolicy:
            TableName: JobApplications
        - SQSSendMessagePolicy:
            QueueName: ResumeProcessingQueue

  GetApplicationFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/getApplication.getApplicationHandler
      Runtime: nodejs18.x
      Environment:
        Variables:
          TABLE_NAME: JobApplications
      Events:
        GetApplicationApi:
          Type: Api
          Properties:
            Path: /applications
            Method: GET
            RestApiId: !Ref MyApi

      Policies:
        - DynamoDBReadPolicy:
            TableName: JobApplications

  GetApplicationByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/getApplicationById.getApplicationByIdHandler
      Runtime: nodejs18.x
      Environment:
        Variables:
          TABLE_NAME: JobApplications
      Events:
        GetApplicationByIdApi:
          Type: Api
          Properties:
            Path: /applications/{id}
            Method: GET
            RestApiId: !Ref MyApi

      Policies:
        - DynamoDBReadPolicy:
            TableName: JobApplications

  UpdateApplicationFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/updateApplication.updateApplicationHandler
      Runtime: nodejs18.x
      Environment:
        Variables:
          TABLE_NAME: JobApplications
      Events:
        UpdateApplicationApi:
          Type: Api
          Properties:
            Path: /applications/{id}
            Method: PUT
            RestApiId: !Ref MyApi

      Policies:
        - DynamoDBCrudPolicy:
            TableName: JobApplications

  DeleteApplicationFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/deleteApplication.deleteApplicationHandler
      Runtime: nodejs18.x
      Environment:
        Variables:
          TABLE_NAME: JobApplications
      Events:
        DeleteApplicationApi:
          Type: Api
          Properties:
            Path: /applications/{id}
            Method: DELETE  
            RestApiId: !Ref MyApi

      Policies:
        - DynamoDBCrudPolicy:
            TableName: JobApplications

  ResumeProcessingQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: ResumeProcessingQueue

  ResumeProcessingWorker:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/processApplications.processApplicationsHandler
      Runtime: nodejs18.x
      Environment:
        Variables:
          QUEUE_URL: !Ref ResumeProcessingQueue
          TABLE_NAME: JobApplications
      Policies:
        - SQSSendMessagePolicy:
            QueueName: ResumeProcessingQueue
        - DynamoDBCrudPolicy:
            TableName: JobApplications
      Events:
        SQSQueueEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt ResumeProcessingQueue.Arn

Outputs:
  ApiUrl:
    Description: "API Gateway endpoint URL"
    Value: 
      Fn::Sub: "https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/applications"
